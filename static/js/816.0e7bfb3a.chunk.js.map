{"version":3,"file":"static/js/816.0e7bfb3a.chunk.js","mappings":"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","sources":["components/Articles/Articles.style.js","components/Articles/Articles.jsx","views/SinglePage/SinglePage.style.js","views/SinglePage/SinglePage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport logo from \"../../assets/images/logo.jpg\";\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 10px;\n    &::after {\n      content: url(${logo});\n      font-size: 150%;\n    }\n  }\n`;\n\nexport const LinkPost = styled(NavLink)`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  text-align: justify;\n  background-color: transparent;\n  color: ${(p) => p.theme.colors.white};\n\n  height: 100%;\n  width: 100%;\n  :hover,\n  :focus {\n    color: ${(p) => p.theme.colors.accent};\n  }\n`;\n\nexport const Title = styled.h2`\n  width: 100%;\n  display: inline-block;\n  padding: 10px;\n  font-weight: 700;\n  font-size: 1.2em;\n  text-transform: uppercase;\n  background-color: ${(p) => p.theme.colors.bg_black};\n  color: ${(p) => p.theme.colors.white};\n`;\nexport const TimeBox = styled.div`\n  color: ${(p) => p.theme.colors.accent};\n  padding: 20px;\n`;\nexport const SubTitle = styled.h3`\n  padding: 20px;\n`;\nexport const SubText = styled.p`\n  text-align: justify;\n  &::first-letter {\n    color: ${(p) => p.theme.colors.accent};\n    font-size: 200%;\n  }\n`;\nexport const Content = styled.div`\n  padding: 15px 30px;\n`;\n","import propTypes from \"prop-types\";\n\nimport { getCategory } from \"../../services/helpers\";\n\nimport {\n  Item,\n  LinkPost,\n  Title,\n  Content,\n  TimeBox,\n  SubTitle,\n  SubText,\n} from \"./Articles.style\";\n\nconst Articles = ({ data }) => {\n  const {\n    // id,\n    title,\n    date,\n    // image,\n    category_id,\n    description,\n    title_block1_content1,\n    block1_content1,\n    title_block1_content2,\n    block1_content2,\n    title_block1_content3,\n    block1_content3,\n    title_block1_content4,\n    block1_content4,\n  } = data;\n\n  return (\n    <Item id={title}>\n      <Title>\n        <LinkPost\n          to={getCategory(category_id) + title}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {title}\n        </LinkPost>\n      </Title>\n\n      <TimeBox>{date}</TimeBox>\n      <Content>\n        <SubText>{description}</SubText>\n        <SubTitle>{title_block1_content1}</SubTitle>\n        <SubText>{block1_content1}</SubText>\n        <SubTitle>{title_block1_content2}</SubTitle>\n        <SubText>{block1_content2}</SubText>\n        <SubTitle>{title_block1_content3}</SubTitle>\n        <SubText>{block1_content3}</SubText>\n        <SubTitle>{title_block1_content4}</SubTitle>\n        <SubText>{block1_content4}</SubText>\n      </Content>\n    </Item>\n  );\n};\n\nArticles.propTypes = {\n  data: propTypes.shape({\n    id: propTypes.string.isRequired,\n    title: propTypes.string,\n    date: propTypes.string,\n    image: propTypes.string,\n    category_id: propTypes.string,\n    description: propTypes.string,\n    title_block1_content1: propTypes.string,\n    block1_content1: propTypes.string,\n    title_block1_content2: propTypes.string,\n    block1_content2: propTypes.string,\n    title_block1_content3: propTypes.string,\n    block1_content3: propTypes.string,\n    title_block1_content4: propTypes.string,\n    block1_content4: propTypes.string,\n  }),\n};\n\nexport default Articles;\n","import styled from \"styled-components\";\n\nexport const BoxImg = styled.div`\n  position: relative;\n  overflow: hidden;\n  max-height: 300px;\n  width: 100%;\n`;\nexport const Img = styled.img`\n  background-color: ${(p) => p.theme.colors.gray};\n  display: block;\n  width: 100%;\n  height: auto;\n`;\n","//import data from \"../../services/article.json\";\nimport { useParams } from \"react-router-dom\";\nimport propTypes from \"prop-types\";\nimport { nanoid } from \"nanoid\";\nimport Articles from \"../../components/Articles/Articles\";\nimport { BoxImg, Img } from \"./SinglePage.style\";\n\nconst SinglePage = ({ data }) => {\n  const { postName } = useParams();\n  const getArticleByTitle = (titleArticle) => {\n    const res = data.find(\n      (article) => article.title.toLowerCase() === titleArticle.toLowerCase()\n    );\n    return res;\n  };\n\n  const article = getArticleByTitle(postName);\n\n  return (\n    <section>\n      <BoxImg>\n        <Img src={`.` + article.image} alt={article.title} />\n      </BoxImg>\n      <ul>\n        <Articles key={article.id + nanoid(6)} data={article} />\n      </ul>\n    </section>\n  );\n};\n\nexport default SinglePage;\n\nSinglePage.propTypes = {\n  data: propTypes.shape({\n    id: propTypes.string.isRequired,\n    title: propTypes.string,\n    date: propTypes.string,\n    image: propTypes.string,\n    category_id: propTypes.string,\n    description: propTypes.string,\n    title_block1_content1: propTypes.string,\n    block1_content1: propTypes.string,\n    title_block1_content2: propTypes.string,\n    block1_content2: propTypes.string,\n    title_block1_content3: propTypes.string,\n    block1_content3: propTypes.string,\n    title_block1_content4: propTypes.string,\n    block1_content4: propTypes.string,\n  }),\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Item","styled","_templateObject","_taggedTemplateLiteral","logo","LinkPost","NavLink","_templateObject2","p","theme","colors","white","accent","Title","_templateObject3","bg_black","TimeBox","_templateObject4","SubTitle","_templateObject5","SubText","_templateObject6","Content","_templateObject7","_ref","data","title","date","category_id","description","title_block1_content1","block1_content1","title_block1_content2","block1_content2","title_block1_content3","block1_content3","title_block1_content4","block1_content4","_jsxs","id","children","_jsx","to","getCategory","target","rel","BoxImg","Img","gray","article","titleArticle","res","find","toLowerCase","getArticleByTitle","useParams","postName","src","image","alt","Articles","nanoid","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}